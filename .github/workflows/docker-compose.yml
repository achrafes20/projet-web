name: Docker Compose Build, Test, Push and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # --- Étapes Docker ---
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to Docker Hub
      if: github.event_name == 'push'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Start Docker Compose
      run: docker compose up -d --build

    - name: Wait for services
      run: |
        docker compose exec -T db mysqladmin ping -h localhost -u root -psecret --wait
        sleep 10

    - name: Run Laravel migrations
      run: docker compose exec -T backend php artisan migrate --force

    - name: Verify services
      id: verify-services
      run: |
        docker compose ps | grep backend | grep Up || echo "Backend check failed"
        docker compose ps | grep frontend | grep Up || echo "Frontend check failed"
        docker compose ps | grep db | grep Up || echo "Database check failed"
        echo "services_ready=true" >> $GITHUB_OUTPUT

    - name: Check Dockerfile changes
      id: dockerfile-changes
      run: |
        changed_files=$(git diff --name-only HEAD^ HEAD || echo "")
        backend_changed=false
        frontend_changed=false
        
        [[ "$changed_files" =~ "backend/Dockerfile" ]] && backend_changed=true
        [[ "$changed_files" =~ "frontend/Dockerfile" ]] && frontend_changed=true
        
        echo "backend_changed=$backend_changed" >> $GITHUB_OUTPUT
        echo "frontend_changed=$frontend_changed" >> $GITHUB_OUTPUT

    - name: Push Backend Image
      if: |
        github.event_name == 'push' &&
        steps.verify-services.outputs.services_ready == 'true' &&
        steps.dockerfile-changes.outputs.backend_changed == 'true'
      run: |
        docker tag $(docker compose images -q backend) ${{ secrets.DOCKER_HUB_USERNAME }}/gym-backend:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gym-backend:latest
      continue-on-error: true

    - name: Push Frontend Image
      if: |
        github.event_name == 'push' &&
        steps.verify-services.outputs.services_ready == 'true' &&
        steps.dockerfile-changes.outputs.frontend_changed == 'true'
      run: |
        docker tag $(docker compose images -q frontend) ${{ secrets.DOCKER_HUB_USERNAME }}/gym-frontend:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gym-frontend:latest
      continue-on-error: true

    # --- Déploiement InfinityFree ---
    # --- Déploiement InfinityFree via FTP ---
    - name: Prepare backend files
      if: github.event_name == 'push'
      run: |
        mkdir -p deploy-htdocs
        rsync -av --progress backend/ deploy-htdocs/ \
          --exclude=vendor/ \
          --exclude=public/ \
          --exclude=.env \
          --exclude=storage/logs/ \
          --exclude=.gitignore

    - name: Upload to InfinityFree via FTP
      if: github.event_name == 'push'
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.INFINITYFREE_HOST }}
        username: ${{ secrets.INFINITYFREE_USERNAME }}
        password: ${{ secrets.INFINITYFREE_PASSWORD }}
        port: ${{ secrets.INFINITYFREE_FTP_PORT || 21 }}
        local-dir: ./deploy-htdocs/
        server-dir: ./htdocs/
        dangerous-clean-slate: true

    # --- Nettoyage ---
    - name: Clean up
      if: always()
      run: |
        docker compose down -v
        rm -rf deploy-htdocs
