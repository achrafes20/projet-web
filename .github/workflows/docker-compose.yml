name: Docker Compose Build, Test, Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Nécessaire pour git diff

    - name: Free up port 3306
      run: |
        sudo lsof -ti :3306 | xargs -r sudo kill -9 || true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Start Docker Compose
      run: docker compose up -d --build

    - name: Wait for services
      run: |
        docker compose exec -T db mysqladmin ping -h localhost -u root -psecret --wait
        sleep 10

    - name: Run Laravel migrations
      run: docker compose exec -T backend php artisan migrate --force

    - name: Verify services
      id: verify-services
      run: |
        docker compose ps | grep backend | grep Up || exit 1
        docker compose ps | grep frontend | grep Up || exit 1
        docker compose ps | grep db | grep Up || exit 1
        echo "services_ready=true" >> $GITHUB_OUTPUT

    - name: Check for Dockerfile changes
      id: dockerfile-changes
      run: |
        # Initialiser avec false par défaut
        echo "backend_changed=false" >> $GITHUB_OUTPUT
        echo "frontend_changed=false" >> $GITHUB_OUTPUT
        
        # Vérifier les changements seulement si c'est un push
        if [ "${{ github.event_name }}" == "push" ]; then
          changed_files=$(git diff --name-only HEAD^ HEAD 2>/dev/null || echo "")
          
          if [[ "$changed_files" == "" ]]; then
            echo "No changes detected between HEAD^ and HEAD"
          else
            echo "Changed files: $changed_files"
            if [[ "$changed_files" =~ "backend/Dockerfile" ]]; then
              echo "Backend Dockerfile changed"
              echo "backend_changed=true" >> $GITHUB_OUTPUT
            fi
            
            if [[ "$changed_files" =~ "frontend/Dockerfile" ]]; then
              echo "Frontend Dockerfile changed"
              echo "frontend_changed=true" >> $GITHUB_OUTPUT
            fi
          fi
        fi

    - name: Push Backend Image
      if: |
        github.event_name == 'push' &&
        steps.verify-services.outputs.services_ready == 'true' &&
        steps.dockerfile-changes.outputs.backend_changed == 'true'
      run: |
        echo "Pushing backend image..."
        docker tag $(docker compose images -q backend) ${{ secrets.DOCKER_HUB_USERNAME }}/gym-backend:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gym-backend:latest

    - name: Push Frontend Image
      if: |
        github.event_name == 'push' &&
        steps.verify-services.outputs.services_ready == 'true' &&
        steps.dockerfile-changes.outputs.frontend_changed == 'true'
      run: |
        echo "Pushing frontend image..."
        docker tag $(docker compose images -q frontend) ${{ secrets.DOCKER_HUB_USERNAME }}/gym-frontend:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gym-frontend:latest

    - name: Prepare backend files for deployment
      if: github.event_name == 'push'
      run: |
        mkdir -p deploy-backend
        # Copier tous les fichiers sauf .env, vendor et public
        rsync -av --progress backend/ deploy-backend/ \
          --exclude=.env \
          --exclude=vendor/ \
          --exclude=public/ \
          --exclude=storage/
        echo "Backend files prepared for deployment"

    - name: Deploy to InfinityFree
      if: github.event_name == 'push'
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.INFINITYFREE_HOST }}
        username: ${{ secrets.INFINITYFREE_USERNAME }}
        password: ${{ secrets.INFINITYFREE_PASSWORD }}
        port: ${{ secrets.INFINITYFREE_PORT || 22 }}
        source: "deploy-backend/"
        target: ${{ secrets.INFINITYFREE_DEPLOY_PATH }}
        strip_components: 1

    - name: Clean up
      if: always()
      run: |
        docker compose down -v
        rm -rf deploy-backend
